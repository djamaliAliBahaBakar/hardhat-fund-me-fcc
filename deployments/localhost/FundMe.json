{
     "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
     "abi": [
          {
               "inputs": [
                    {
                         "internalType": "address",
                         "name": "priceFeedAdr",
                         "type": "address"
                    }
               ],
               "stateMutability": "nonpayable",
               "type": "constructor"
          },
          {
               "inputs": [],
               "name": "FundMe_NotOwner",
               "type": "error"
          },
          {
               "stateMutability": "payable",
               "type": "fallback"
          },
          {
               "inputs": [],
               "name": "MINIMUM_USD",
               "outputs": [
                    {
                         "internalType": "uint256",
                         "name": "",
                         "type": "uint256"
                    }
               ],
               "stateMutability": "view",
               "type": "function"
          },
          {
               "inputs": [
                    {
                         "internalType": "address",
                         "name": "",
                         "type": "address"
                    }
               ],
               "name": "addressToAmountFunded",
               "outputs": [
                    {
                         "internalType": "uint256",
                         "name": "",
                         "type": "uint256"
                    }
               ],
               "stateMutability": "view",
               "type": "function"
          },
          {
               "inputs": [],
               "name": "fund",
               "outputs": [],
               "stateMutability": "payable",
               "type": "function"
          },
          {
               "inputs": [
                    {
                         "internalType": "address",
                         "name": "fundingAddress",
                         "type": "address"
                    }
               ],
               "name": "getAddressToAmountFunded",
               "outputs": [
                    {
                         "internalType": "uint256",
                         "name": "",
                         "type": "uint256"
                    }
               ],
               "stateMutability": "view",
               "type": "function"
          },
          {
               "inputs": [
                    {
                         "internalType": "uint256",
                         "name": "index",
                         "type": "uint256"
                    }
               ],
               "name": "getFunder",
               "outputs": [
                    {
                         "internalType": "address",
                         "name": "",
                         "type": "address"
                    }
               ],
               "stateMutability": "view",
               "type": "function"
          },
          {
               "inputs": [],
               "name": "getOwner",
               "outputs": [
                    {
                         "internalType": "address",
                         "name": "",
                         "type": "address"
                    }
               ],
               "stateMutability": "view",
               "type": "function"
          },
          {
               "inputs": [],
               "name": "getPriceFeed",
               "outputs": [
                    {
                         "internalType": "contract AggregatorV3Interface",
                         "name": "",
                         "type": "address"
                    }
               ],
               "stateMutability": "view",
               "type": "function"
          },
          {
               "inputs": [],
               "name": "priceFeed",
               "outputs": [
                    {
                         "internalType": "contract AggregatorV3Interface",
                         "name": "",
                         "type": "address"
                    }
               ],
               "stateMutability": "view",
               "type": "function"
          },
          {
               "inputs": [],
               "name": "withdraw",
               "outputs": [],
               "stateMutability": "nonpayable",
               "type": "function"
          },
          {
               "stateMutability": "payable",
               "type": "receive"
          }
     ],
     "transactionHash": "0x33fcd7d796a3716ab05efcdb41750babac3f61ba3c75a3074b98bf37bd17e83c",
     "receipt": {
          "to": null,
          "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
          "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
          "transactionIndex": 0,
          "gasUsed": "882719",
          "logsBloom": "0x
          "blockHash": "0xbc5e9f9ceae5c1bed15fc1a776069b24eccf80d1d47ef8142d8f36950d2860c7",
          "transactionHash": "0x33fcd7d796a3716ab05efcdb41750babac3f61ba3c75a3074b98bf37bd17e83c",
          "logs": [],
          "blockNumber": 2,
          "cumulativeGasUsed": "882719",
          "status": 1,
          "byzantium": true
     },
     "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
     "numDeployments": 1,
     "solcInputHash": "557920f6437b89e7226e621d53a835be",
     "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Djamli Ali B Bakar\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"The Alexandr N. Tetearing algorithm could increase precision\"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a simple fundMe contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get Fund from users\\n//Withdraw \\n//Set a minimum funding value in USD\\n// SPDX-License-Identifier: MIT\\n//pragma\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//import\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Error Codes\\nerror FundMe_NotOwner();\\n\\n//Interfaces, libraries, Contracts\\n\\n// Ticker and try to pinpoint exactly what's going on (15mn)\\n// Google the exact error\\n// Go to our github repo discussion and/or updates\\n// Ask a question on a forum like Stack Exchange ETH and Stack overflow\\n\\n/// @title A contract for crowdfunding\\n/// @author Djamli Ali B Bakar\\n/// @notice This contract is to demo a simple fundMe contract\\n/// @dev This implements price feed as our library\\n/// @custom:experimental This is an experimental contract.\\ncontract FundMe {\\n    //Type declaration\\n    using PriceConverter for uint256;\\n    // 931,261\\n    // 809 792\\n\\n    //States variables\\n    uint256 public constant  MINIMUM_USD = 50*1e18;\\n    address[] private funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    //modifiers\\n    modifier onlyOwner() {\\n        //require(msg.sender==i_owner,\\\"Not the owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    //functions\\n    //  constructor\\n    //  receive function (if exists)\\n    //  fallback function (if exists)\\n    //  external\\n    //  public\\n    //  internal\\n    //  private\\n\\n\\n    constructor(address priceFeedAdr) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAdr);\\n    }\\n    \\n    receive() external payable  {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /// @notice This function funds this contract\\n    /// @dev The Alexandr N. Tetearing algorithm could increase precision\\n    function fund() public payable {\\n        \\n        //Want to be able to set a minimum ount in USD\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Did not send enough!\\\");\\n        \\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n\\n    }\\n   \\n\\n    function withdraw() public onlyOwner {\\n        \\n        for (uint256 funderIndex =0; funderIndex < funders.length;funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        funders = new address[](0);\\n\\n        //transfer\\n        //payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //require(sendSuccess,\\\"Send failed\\\");\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess,\\\"Call failed\\\");\\n    }\\n\\n\\n        \\n\\n    \\n\\n     function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return addressToAmountFunded[fundingAddress];\\n    } \\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n}\",\"keccak256\":\"0x5554c56b83bdc703b497df17e8d4aaaa1a296c4a6419e5504753cdbc52a3de07\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        //ABI\\n        //Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e (ETH/USD)\\n             (,int256 price,,,) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n          return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n\\n    function getRandom() internal view returns(uint256) {\\n        \\n    }\\n}\\n\",\"keccak256\":\"0x0bd664c06c48353e541202c8867907de2b1c3dd885c2363e215535fe9e042de4\",\"license\":\"MIT\"}},\"version\":1}",
     "bytecode": "0x60a060405234801561001057600080fd5b5060405162000ff638038062000ff683398181016040528101906100349190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610e9462000162600039600081816103ad015261063a0152610e946000f3fe60806040526004361061008a5760003560e01c8063741bef1a11610059578063741bef1a1461015f578063893d20e81461018a5780639e87a5cd146101b5578063b60d4288146101e0578063d7b4750c146101ea57610099565b80630343fb25146100a35780633ccfd60b146100e05780633e47d6f3146100f75780636b69a5921461013457610099565b3661009957610097610227565b005b6100a1610227565b005b3480156100af57600080fd5b506100ca60048036038101906100c591906108a6565b610362565b6040516100d791906108ec565b60405180910390f35b3480156100ec57600080fd5b506100f56103ab565b005b34801561010357600080fd5b5061011e600480360381019061011991906108a6565b6105eb565b60405161012b91906108ec565b60405180910390f35b34801561014057600080fd5b50610149610603565b60405161015691906108ec565b60405180910390f35b34801561016b57600080fd5b50610174610610565b6040516101819190610966565b60405180910390f35b34801561019657600080fd5b5061019f610636565b6040516101ac9190610990565b60405180910390f35b3480156101c157600080fd5b506101ca61065e565b6040516101d79190610966565b60405180910390f35b6101e8610227565b005b3480156101f657600080fd5b50610211600480360381019061020c91906109d7565b610688565b60405161021e9190610990565b60405180910390f35b6802b5e3af16b1880000610266600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106cf90919063ffffffff16565b10156102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029e90610a61565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f69190610ab0565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104db57600080828154811061045557610454610ae4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d390610b13565b915050610433565b50600067ffffffffffffffff8111156104f7576104f6610b5b565b5b6040519080825280602002602001820160405280156105255781602001602082028036833780820191505090505b506000908051906020019061053b92919061079c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056290610bbb565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50509050806105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df90610c1c565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061069d5761069c610ae4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106db8361070b565b90506000670de0b6b3a764000085836106f49190610c3c565b6106fe9190610cad565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d9190610d6b565b5050509150506402540be400816107949190610de6565b915050919050565b828054828255906000526020600020908101928215610815579160200282015b828111156108145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107bc565b5b5090506108229190610826565b5090565b5b8082111561083f576000816000905550600101610827565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087382610848565b9050919050565b61088381610868565b811461088e57600080fd5b50565b6000813590506108a08161087a565b92915050565b6000602082840312156108bc576108bb610843565b5b60006108ca84828501610891565b91505092915050565b6000819050919050565b6108e6816108d3565b82525050565b600060208201905061090160008301846108dd565b92915050565b6000819050919050565b600061092c61092761092284610848565b610907565b610848565b9050919050565b600061093e82610911565b9050919050565b600061095082610933565b9050919050565b61096081610945565b82525050565b600060208201905061097b6000830184610957565b92915050565b61098a81610868565b82525050565b60006020820190506109a56000830184610981565b92915050565b6109b4816108d3565b81146109bf57600080fd5b50565b6000813590506109d1816109ab565b92915050565b6000602082840312156109ed576109ec610843565b5b60006109fb848285016109c2565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676821000000000000000000000000600082015250565b6000610a4b601483610a04565b9150610a5682610a15565b602082019050919050565b60006020820190508181036000830152610a7a81610a3e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610abb826108d3565b9150610ac6836108d3565b9250828201905080821115610ade57610add610a81565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b1e826108d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b5057610b4f610a81565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ba5600083610b8a565b9150610bb082610b95565b600082019050919050565b6000610bc682610b98565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c06600b83610a04565b9150610c1182610bd0565b602082019050919050565b60006020820190508181036000830152610c3581610bf9565b9050919050565b6000610c47826108d3565b9150610c52836108d3565b9250828202610c60816108d3565b91508282048414831517610c7757610c76610a81565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cb8826108d3565b9150610cc3836108d3565b925082610cd357610cd2610c7e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cfd81610cde565b8114610d0857600080fd5b50565b600081519050610d1a81610cf4565b92915050565b6000819050919050565b610d3381610d20565b8114610d3e57600080fd5b50565b600081519050610d5081610d2a565b92915050565b600081519050610d65816109ab565b92915050565b600080600080600060a08688031215610d8757610d86610843565b5b6000610d9588828901610d0b565b9550506020610da688828901610d41565b9450506040610db788828901610d56565b9350506060610dc888828901610d56565b9250506080610dd988828901610d0b565b9150509295509295909350565b6000610df182610d20565b9150610dfc83610d20565b9250828202610e0a81610d20565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e4257610e41610a81565b5b8282058414831517610e5757610e56610a81565b5b509291505056fea2646970667358221220b1a69bcdc03d7f486cd1c6a56b5e8c00f8367fe7cc44d09fd3ea2afae340e0cb64736f6c63430008120033",
     "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063741bef1a11610059578063741bef1a1461015f578063893d20e81461018a5780639e87a5cd146101b5578063b60d4288146101e0578063d7b4750c146101ea57610099565b80630343fb25146100a35780633ccfd60b146100e05780633e47d6f3146100f75780636b69a5921461013457610099565b3661009957610097610227565b005b6100a1610227565b005b3480156100af57600080fd5b506100ca60048036038101906100c591906108a6565b610362565b6040516100d791906108ec565b60405180910390f35b3480156100ec57600080fd5b506100f56103ab565b005b34801561010357600080fd5b5061011e600480360381019061011991906108a6565b6105eb565b60405161012b91906108ec565b60405180910390f35b34801561014057600080fd5b50610149610603565b60405161015691906108ec565b60405180910390f35b34801561016b57600080fd5b50610174610610565b6040516101819190610966565b60405180910390f35b34801561019657600080fd5b5061019f610636565b6040516101ac9190610990565b60405180910390f35b3480156101c157600080fd5b506101ca61065e565b6040516101d79190610966565b60405180910390f35b6101e8610227565b005b3480156101f657600080fd5b50610211600480360381019061020c91906109d7565b610688565b60405161021e9190610990565b60405180910390f35b6802b5e3af16b1880000610266600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106cf90919063ffffffff16565b10156102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029e90610a61565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f69190610ab0565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610430576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104db57600080828154811061045557610454610ae4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104d390610b13565b915050610433565b50600067ffffffffffffffff8111156104f7576104f6610b5b565b5b6040519080825280602002602001820160405280156105255781602001602082028036833780820191505090505b506000908051906020019061053b92919061079c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056290610bbb565b60006040518083038185875af1925050503d806000811461059f576040519150601f19603f3d011682016040523d82523d6000602084013e6105a4565b606091505b50509050806105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df90610c1c565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061069d5761069c610ae4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806106db8361070b565b90506000670de0b6b3a764000085836106f49190610c3c565b6106fe9190610cad565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d9190610d6b565b5050509150506402540be400816107949190610de6565b915050919050565b828054828255906000526020600020908101928215610815579160200282015b828111156108145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107bc565b5b5090506108229190610826565b5090565b5b8082111561083f576000816000905550600101610827565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061087382610848565b9050919050565b61088381610868565b811461088e57600080fd5b50565b6000813590506108a08161087a565b92915050565b6000602082840312156108bc576108bb610843565b5b60006108ca84828501610891565b91505092915050565b6000819050919050565b6108e6816108d3565b82525050565b600060208201905061090160008301846108dd565b92915050565b6000819050919050565b600061092c61092761092284610848565b610907565b610848565b9050919050565b600061093e82610911565b9050919050565b600061095082610933565b9050919050565b61096081610945565b82525050565b600060208201905061097b6000830184610957565b92915050565b61098a81610868565b82525050565b60006020820190506109a56000830184610981565b92915050565b6109b4816108d3565b81146109bf57600080fd5b50565b6000813590506109d1816109ab565b92915050565b6000602082840312156109ed576109ec610843565b5b60006109fb848285016109c2565b91505092915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676821000000000000000000000000600082015250565b6000610a4b601483610a04565b9150610a5682610a15565b602082019050919050565b60006020820190508181036000830152610a7a81610a3e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610abb826108d3565b9150610ac6836108d3565b9250828201905080821115610ade57610add610a81565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b1e826108d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b5057610b4f610a81565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ba5600083610b8a565b9150610bb082610b95565b600082019050919050565b6000610bc682610b98565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c06600b83610a04565b9150610c1182610bd0565b602082019050919050565b60006020820190508181036000830152610c3581610bf9565b9050919050565b6000610c47826108d3565b9150610c52836108d3565b9250828202610c60816108d3565b91508282048414831517610c7757610c76610a81565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cb8826108d3565b9150610cc3836108d3565b925082610cd357610cd2610c7e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cfd81610cde565b8114610d0857600080fd5b50565b600081519050610d1a81610cf4565b92915050565b6000819050919050565b610d3381610d20565b8114610d3e57600080fd5b50565b600081519050610d5081610d2a565b92915050565b600081519050610d65816109ab565b92915050565b600080600080600060a08688031215610d8757610d86610843565b5b6000610d9588828901610d0b565b9550506020610da688828901610d41565b9450506040610db788828901610d56565b9350506060610dc888828901610d56565b9250506080610dd988828901610d0b565b9150509295509295909350565b6000610df182610d20565b9150610dfc83610d20565b9250828202610e0a81610d20565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e4257610e41610a81565b5b8282058414831517610e5757610e56610a81565b5b509291505056fea2646970667358221220b1a69bcdc03d7f486cd1c6a56b5e8c00f8367fe7cc44d09fd3ea2afae340e0cb64736f6c63430008120033",
     "devdoc": {
          "author": "Djamli Ali B Bakar",
          "custom:experimental": "This is an experimental contract.",
          "details": "This implements price feed as our library",
          "kind": "dev",
          "methods": {
               "fund()": {
                    "details": "The Alexandr N. Tetearing algorithm could increase precision"
               }
          },
          "title": "A contract for crowdfunding",
          "version": 1
     },
     "userdoc": {
          "kind": "user",
          "methods": {
               "fund()": {
                    "notice": "This function funds this contract"
               }
          },
          "notice": "This contract is to demo a simple fundMe contract",
          "version": 1
     },
     "storageLayout": {
          "storage": [
               {
                    "astId": 63,
                    "contract": "contracts/FundMe.sol:FundMe",
                    "label": "funders",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_array(t_address)dyn_storage"
               },
               {
                    "astId": 67,
                    "contract": "contracts/FundMe.sol:FundMe",
                    "label": "addressToAmountFunded",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_mapping(t_address,t_uint256)"
               },
               {
                    "astId": 72,
                    "contract": "contracts/FundMe.sol:FundMe",
                    "label": "priceFeed",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_contract(AggregatorV3Interface)45"
               }
          ],
          "types": {
               "t_address": {
                    "encoding": "inplace",
                    "label": "address",
                    "numberOfBytes": "20"
               },
               "t_array(t_address)dyn_storage": {
                    "base": "t_address",
                    "encoding": "dynamic_array",
                    "label": "address[]",
                    "numberOfBytes": "32"
               },
               "t_contract(AggregatorV3Interface)45": {
                    "encoding": "inplace",
                    "label": "contract AggregatorV3Interface",
                    "numberOfBytes": "20"
               },
               "t_mapping(t_address,t_uint256)": {
                    "encoding": "mapping",
                    "key": "t_address",
                    "label": "mapping(address => uint256)",
                    "numberOfBytes": "32",
                    "value": "t_uint256"
               },
               "t_uint256": {
                    "encoding": "inplace",
                    "label": "uint256",
                    "numberOfBytes": "32"
               }
          }
     }
}
